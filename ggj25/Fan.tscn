[gd_scene load_steps=3 format=3 uid="uid://divgqk0d2lwlt"]

[sub_resource type="GDScript" id="GDScript_0a5dd"]
resource_name = "Fan"
script/source = "extends Node3D

var plane: Plane
var falloff_scale: float
@export var falloff: bool
@export var power: float
@export var activate: bool = true

@onready var end_marker: Node3D = $Area3D/CollisionShape3D/EndMarker

# Called when the node enters the scene tree for the first time.
func _ready() -> void:

	pass # Replace with function body.
	
	
# Called every frame. 'delta' is the elapsed time since the previous frame.
func _physics_process(delta: float) -> void:
	var norm = end_marker.global_position - self.global_position
	falloff_scale = norm.length()
	plane = Plane(norm.normalized(), self.global_position);

	for node in $Area3D.get_overlapping_bodies():
		if(!node.is_in_group(\"pushable\")):
			continue
			
		if(!node is RigidBody3D):
			continue
		
		var rb = node as RigidBody3D
		
		if(falloff):
			var dist: float = plane.distance_to(node.global_position)
			var scale = abs(1 - dist / falloff_scale)
			print(scale)
			rb.apply_impulse(power * scale * plane.normal)
		else:
			rb.apply_impulse(plane.normal)
					
	pass

func _on_area_3d_area_entered(area: Area3D) -> void:
	
	pass # Replace with function body.
"

[sub_resource type="BoxShape3D" id="BoxShape3D_bcesa"]

[node name="Fan" type="Node3D"]
script = SubResource("GDScript_0a5dd")

[node name="Area3D" type="Area3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0.5)
disable_mode = 2
collision_layer = 255
collision_mask = 255

[node name="CollisionShape3D" type="CollisionShape3D" parent="Area3D"]
shape = SubResource("BoxShape3D_bcesa")

[node name="EndMarker" type="Marker3D" parent="Area3D/CollisionShape3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0.5)
gizmo_extents = 0.29
